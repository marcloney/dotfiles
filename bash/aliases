# Utility
alias reload='source ~/bin/dotfiles/bash/aliases'
alias ea='vim ~/bin/dotfiles/bash/aliases && reload' # Edit aliases
alias ee="vim ~/bin/dotfiles/bash/env"

# Navigation
alias ~='cd ~'
alias ..='cd ..'
alias cd..='cd ..'
alias ls='ls --color --all -h --group-directories-first'
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

# View HTTP traffic
alias sniff="sudo ngrep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
alias httpdump="sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E \"Host\: .*|GET \/.*\""

# Common
alias h='history'

# Processes
alias tu='top -o cpu' # cpu
alias tm='top -o vsize' # memory

# Git
alias gco='git checkout'
alias gd='git diff'
alias gs="git status"
alias ga="git add ."
alias gpl='git push local master'
alias gpd='git push dev master'
alias gps='git push stable master'
alias gph='git push heroku master'
function gc() { 
  git commit -am "$*"
}
function g() {
  git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --
}

# Subversion
alias sd='svn diff'
alias ss='svn status $*'
alias si='svn info'
alias sup='svn update'
alias sa='svn add $*'
function sl() {
    svn log -r HEAD:BASE -v -l $*
}
function sc() {
  svn commit -m "Marc: $*"
}
function sh() {
    url=$1 # current url of file
    svn log -q $url | grep -E -e "^r[[:digit:]]+" -o | cut -c2- | sort -n | {
        echo
        read r
        svn log -r$r $url@HEAD
        svn cat -r$r $url@HEAD
        echo

        while read r
        do
            echo
            svn log -r$r $url@HEAD
            svn diff -c$r $url@HEAD
            echo
        done
    }
}

# Deployment
function deploy() {
      sudo rm releases/backup
      sudo mv public_html releases/backup
      sudo cp -d staging_html public_html
      sudo chown -R --reference=staging_html public_html
}

function rollback() {
      sudo rm public_html
      sudo cp â€“R releases/backup public_html
}

# Functions
function extract() {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2) tar xjf $1 ;;
      *.tar.gz) tar xzf $1 ;;
      *.bz2) bunzip2 $1 ;;
      *.rar) rar x $1 ;;
      *.gz) gunzip $1 ;;
      *.tar) tar xf $1 ;;
      *.tbz2) tar xjf $1 ;;
      *.tgz) tar xzf $1 ;;
      *.zip) unzip $1 ;;
      *.Z) uncompress $1 ;;
      *) echo "'$1' cannot be extracted via extract()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}
